
package reminderapp;

import database.MySqlConnect;

import java.sql.Statement;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.util.Date;

public class UserMainPage extends javax.swing.JFrame {

    MySqlConnect sqlcon = new MySqlConnect();
    
    Statement stmt;
    ResultSet rs;
    String uname;
    public UserMainPage() {
        initComponents();
        sqlcon.Connect();
        MainPanel.setVisible(true);
        nothingToShowLabel.setVisible(false);
        reminderTable.setVisible(true);
        displayReminders();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        MainPanel = new javax.swing.JPanel();
        newReminderBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        remID = new javax.swing.JTextField();
        timeField = new javax.swing.JTextField();
        descField = new javax.swing.JTextField();
        updateReminderBtn = new javax.swing.JButton();
        deleteReminderBtn1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        dateField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        reminderTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        nothingToShowLabel = new javax.swing.JLabel();
        logoutBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 0, 0));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Reminder App");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        MainPanel.setBackground(new java.awt.Color(204, 204, 204));
        MainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Welcome !", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Serif", 0, 14), new java.awt.Color(0, 0, 0))); // NOI18N

        newReminderBtn.setBackground(new java.awt.Color(153, 153, 153));
        newReminderBtn.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        newReminderBtn.setForeground(new java.awt.Color(0, 0, 0));
        newReminderBtn.setText("Add New Reminder");
        newReminderBtn.setToolTipText("Login to System");
        newReminderBtn.setName("newReminderBtn"); // NOI18N
        newReminderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newReminderBtnActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Date");

        jLabel10.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Time");

        jLabel11.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Description");

        remID.setEditable(false);
        remID.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N

        timeField.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        timeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeFieldActionPerformed(evt);
            }
        });

        descField.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N

        updateReminderBtn.setBackground(new java.awt.Color(153, 153, 153));
        updateReminderBtn.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        updateReminderBtn.setForeground(new java.awt.Color(0, 0, 0));
        updateReminderBtn.setText("Update Reminder");
        updateReminderBtn.setToolTipText("Login to System");
        updateReminderBtn.setName("newReminderBtn"); // NOI18N
        updateReminderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateReminderBtnActionPerformed(evt);
            }
        });

        deleteReminderBtn1.setBackground(new java.awt.Color(153, 153, 153));
        deleteReminderBtn1.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        deleteReminderBtn1.setForeground(new java.awt.Color(0, 0, 0));
        deleteReminderBtn1.setText("Delete Reminder");
        deleteReminderBtn1.setToolTipText("Login to System");
        deleteReminderBtn1.setName("newReminderBtn"); // NOI18N
        deleteReminderBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteReminderBtn1ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("RemID");

        dateField.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N

        reminderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        reminderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reminderTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(reminderTable);

        jLabel2.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Upcoming Reminders");

        nothingToShowLabel.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        nothingToShowLabel.setForeground(new java.awt.Color(0, 0, 0));
        nothingToShowLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nothingToShowLabel.setText("Nothing to Show !");

        logoutBtn.setBackground(new java.awt.Color(153, 153, 153));
        logoutBtn.setFont(new java.awt.Font("Serif", 0, 11)); // NOI18N
        logoutBtn.setForeground(new java.awt.Color(0, 0, 0));
        logoutBtn.setText("Logout");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        refreshBtn.setBackground(new java.awt.Color(153, 153, 153));
        refreshBtn.setForeground(new java.awt.Color(0, 0, 0));
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(nothingToShowLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(155, 155, 155)
                        .addComponent(refreshBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MainPanelLayout.createSequentialGroup()
                                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(remID, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(MainPanelLayout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updateReminderBtn)
                                    .addComponent(deleteReminderBtn1)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(descField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(logoutBtn, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addContainerGap(24, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                        .addComponent(newReminderBtn)
                        .addGap(83, 83, 83))))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(logoutBtn)
                        .addGap(17, 17, 17)
                        .addComponent(newReminderBtn))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(refreshBtn))
                        .addGap(24, 24, 24)
                        .addComponent(nothingToShowLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(remID, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(descField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(deleteReminderBtn1)
                        .addGap(18, 18, 18)
                        .addComponent(updateReminderBtn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static boolean checkDateValid(String date){
        
        try{
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            sdf.setLenient(false);
            sdf.parse(date);
            return true;
        }
        catch (ParseException e) {
            return false;
        }
    }
    
    public static boolean compareDates(String d1, String givenTime) {
        
        try{
          
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            Date currDate = new Date();
            String cDate = sdf.format(currDate);
            
            System.out.println("Current date : " + cDate);
            System.out.println("Given date :" +d1);
            
            if(checkDateValid(d1)){
                Date dateGiven = sdf.parse(d1);
                Date systemDate = sdf.parse(cDate);

                Date timeDate = new Date();
                SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
                timeFormat.format(timeDate);

                if(dateGiven.after(systemDate)){
                    return true;
                } 
                if(dateGiven.equals(systemDate)){
                    System.out.println("Equal");
                    if(timeFormat.parse(timeFormat.format(timeDate)).after(timeFormat.parse(givenTime))){
                        System.out.println("Sys time greater");
                           return false;
                    }
                    else{
                        System.out.println("Sys time less");
                        return true;
                    }         
                }
                 if(dateGiven.before(systemDate)){
                    System.out.println("Before");
                    return false;
                }
            }
            else{
                 JOptionPane.showMessageDialog(null, "Invalid Date", "WARNING", JOptionPane.WARNING_MESSAGE); 
            }
        }
        catch(ParseException ex){
            ex.printStackTrace();
            //printDialog();
            
        }
        return false;
    }
    
    
    
    private void reminderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reminderTableMouseClicked

        int selectedRow = reminderTable.getSelectedRow();
        DefaultTableModel mode1 = (DefaultTableModel)reminderTable.getModel();
        remID.setText(mode1.getValueAt(selectedRow, 0).toString());
        dateField.setText(mode1.getValueAt(selectedRow, 1).toString());
        timeField.setText(mode1.getValueAt(selectedRow, 2).toString());
        descField.setText(mode1.getValueAt(selectedRow, 3).toString());
    }//GEN-LAST:event_reminderTableMouseClicked

    private void deleteReminderBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteReminderBtn1ActionPerformed

        String reminderID = remID.getText();
        String date = dateField.getText();
        String time = timeField.getText();
        String desc = descField.getText();
        if(sqlcon.deleteReminder(reminderID, date, time, desc)){
            JOptionPane.showMessageDialog(this, "Successfully Deleted !", "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
            remID.setText(" ");
            dateField.setText(" ");
            timeField.setText(" ");
            descField.setText(" ");
            displayReminders();
        }
        else{
            JOptionPane.showMessageDialog(this, "Please try again..", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteReminderBtn1ActionPerformed

    private void updateReminderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateReminderBtnActionPerformed

        String reminderID = remID.getText();
        String date = dateField.getText();
        String time = timeField.getText();
        String desc = descField.getText();
        if(date.equals("") || time.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Date", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        else{
            date  = date + " " + "00:00:00";
            if(compareDates(date, time)){
                if(sqlcon.updateReminder(reminderID, date, time, desc)){
                    JOptionPane.showMessageDialog(this, "Successfully Updated !", "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                    displayReminders();
                }
                else{
                    JOptionPane.showMessageDialog(this, "Please try again..", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Invalid Time or Date", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_updateReminderBtnActionPerformed

    private void newReminderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newReminderBtnActionPerformed
        addReminder ad = new addReminder();
        ad.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_newReminderBtnActionPerformed

    private void timeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeFieldActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        getUsername.set_username(null);
        LoginUI login = new LoginUI();
        login.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
       
        displayReminders();
    }//GEN-LAST:event_refreshBtnActionPerformed

    
    public void displayReminders()
    {
        String[] columnNames =  {"RemID", "Date","Time","Description"};
        int i=0;
        String uname = getUsername.get_username();
        System.out.println(uname);
        DefaultTableModel dtm = new DefaultTableModel(0,0);
        dtm.setColumnIdentifiers(columnNames);
        reminderTable.setModel(dtm);
        sqlcon.Connect();
        stmt = sqlcon.getStmt();
       
        String retrieveall = "select * from Reminder where userName='" + uname + "';";
        try{
            rs =stmt.executeQuery(retrieveall);
            if(!rs.next()){
                nothingToShowLabel.setVisible(true);
                reminderTable.setVisible(false);
            }
            else{
                nothingToShowLabel.setVisible(false);
                reminderTable.setVisible(true);
                do
                {
                   Vector data = new Vector();
                   
                   data.add(rs.getString("RemID"));
                   data.add(rs.getString("dateSet"));
                   data.add(rs.getString("timeSet"));
                   data.add(rs.getString("description"));
                   i = i + 1;
                   dtm.addRow(data);
               }while(rs.next());
            }
        }
        catch(SQLException e1){
            e1.printStackTrace();
        }
       
        
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserMainPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MainPanel;
    private javax.swing.JTextField dateField;
    private javax.swing.JButton deleteReminderBtn1;
    private javax.swing.JTextField descField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JButton newReminderBtn;
    private javax.swing.JLabel nothingToShowLabel;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JTextField remID;
    private javax.swing.JTable reminderTable;
    private javax.swing.JTextField timeField;
    private javax.swing.JButton updateReminderBtn;
    // End of variables declaration//GEN-END:variables
}
